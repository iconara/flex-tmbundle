<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>saveActiveFile</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby -wKU

SUPPORT = ENV['TM_SUPPORT_PATH']
require SUPPORT + '/lib/exit_codes'

accessor_name = STDIN.read

TextMate.exit_show_tool_tip "Please specificy an accessor string" if accessor_name.empty?

# TODO: Ideally we'd pipe the file in via stdin (rather than using save).
f_uri   = ENV["TM_FILEPATH"]
f_open  = File.open( f_uri, "r" )
txt     = f_open.read

accessor_match = txt.scan(/^\W*(private|protected|public){0,1}\W*var\W*\_(#{accessor_name})\W*\:\W*(\w*)/)
class_type = "Object"

if accessor_match.empty?
    print ""	
else
    class_type = accessor_match[0][2]
end

snip = 'private var ${1:_' + accessor_name + '} : ${2:' + class_type + '};

' if accessor_match.empty?

snip += '[Bindable(event="propertyChange")]
public function get ${3:' + accessor_name + '}( ) : ${2:' + class_type + '} { 
	return ${1:_' + accessor_name + '}; 
}

public function set ${3:' + accessor_name + '}( value:${2:' + class_type + '} ) : void {
	var oldValue:${2:' + class_type + '} = ${1:_' + accessor_name + '};
	
	if ( value != oldValue ) {
		${1:_' + accessor_name + '} = value;
		
		dispatchEvent(mx.events.PropertyChangeEvent.createUpdateEvent(this, "${3:' + accessor_name + '}", oldValue, value));
	}
}$0'

TextMate.exit_insert_snippet(snip)
</string>
	<key>fallbackInput</key>
	<string>word</string>
	<key>input</key>
	<string>selection</string>
	<key>keyEquivalent</key>
	<string>^~g</string>
	<key>name</key>
	<string>Bindable Getter/Setter</string>
	<key>output</key>
	<string>discard</string>
	<key>scope</key>
	<string>source.actionscript.3</string>
	<key>uuid</key>
	<string>497A6856-4BA5-45B0-B243-68C1EC4869D4</string>
</dict>
</plist>
